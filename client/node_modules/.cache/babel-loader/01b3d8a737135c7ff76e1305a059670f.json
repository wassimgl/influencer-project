{"ast":null,"code":"import { REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_SUCCESS, LOGIN_FAIL } from \"../action/types\";\nconst initState = {\n  customerInfo: {},\n  token: localStorage.getItem('token') || null,\n  errors: null,\n  isAuth: localStorage.getItem('isAuth') || null\n};\n\nconst customerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n      return { ...state,\n        errors: payload\n      };\n\n    case REGISTER_SUCCESS:\n      return { ...state,\n        customerInfo: payload.newCustomer,\n        errors: null\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      localStorage.setItem('isAuth', true);\n      return { ...state,\n        customerInfo: payload.existCustomer,\n        token: payload.token,\n        isAuth: true,\n        errors: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default customerReducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/influencer/client/src/reducers/customerReducer.js"],"names":["REGISTER_FAIL","REGISTER_SUCCESS","LOGIN_SUCCESS","LOGIN_FAIL","initState","customerInfo","token","localStorage","getItem","errors","isAuth","customerReducer","state","type","payload","newCustomer","setItem","existCustomer"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,EAA0CC,aAA1C,EAAyDC,UAAzD,QAA2E,iBAA3E;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAC,EADC;AAEdC,EAAAA,KAAK,EAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAFzB;AAGdC,EAAAA,MAAM,EAAC,IAHO;AAIdC,EAAAA,MAAM,EAACH,YAAY,CAACC,OAAb,CAAqB,QAArB,KAAkC;AAJ3B,CAAlB;;AAOA,MAAMG,eAAe,GAAG,YAAsC;AAAA,MAArCC,KAAqC,uEAA7BR,SAA6B;AAAA,MAAnB;AAACS,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAmB;;AAC1D,UAAOD,IAAP;AACI,SAAKV,UAAL;AACA,SAAKH,aAAL;AACI,aAAM,EAAC,GAAGY,KAAJ;AAAWH,QAAAA,MAAM,EAAGK;AAApB,OAAN;;AACA,SAAKb,gBAAL;AACI,aAAM,EACF,GAAGW,KADD;AAEFP,QAAAA,YAAY,EAAES,OAAO,CAACC,WAFpB;AAGFN,QAAAA,MAAM,EAAC;AAHL,OAAN;;AAKP,SAAKP,aAAL;AACIK,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA6BF,OAAO,CAACR,KAArC;AACAC,MAAAA,YAAY,CAACS,OAAb,CAAqB,QAArB,EAA8B,IAA9B;AAED,aAAM,EACF,GAAGJ,KADD;AAEFP,QAAAA,YAAY,EAAES,OAAO,CAACG,aAFpB;AAGDX,QAAAA,KAAK,EAAEQ,OAAO,CAACR,KAHd;AAIDI,QAAAA,MAAM,EAAE,IAJP;AAKFD,QAAAA,MAAM,EAAC;AALL,OAAN;;AAOJ;AACA,aAAOG,KAAP;AAtBJ;AAwBF,CAzBF;;AA0BC,eAAeD,eAAf","sourcesContent":["import { REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_SUCCESS, LOGIN_FAIL } from \"../action/types\";\r\n\r\nconst initState = {\r\n    customerInfo:{},\r\n    token:localStorage.getItem('token') || null,\r\n    errors:null,\r\n    isAuth:localStorage.getItem('isAuth') || null,\r\n};\r\n\r\nconst customerReducer = (state = initState,{type,payload}) => { \r\n    switch(type){\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n            return{...state, errors : payload }\r\n            case REGISTER_SUCCESS:\r\n                return{ \r\n                    ...state,\r\n                    customerInfo: payload.newCustomer,\r\n                    errors:null,\r\n         };\r\n         case LOGIN_SUCCESS:\r\n             localStorage.setItem('token',payload.token);\r\n             localStorage.setItem('isAuth',true);\r\n\r\n            return{ \r\n                ...state,\r\n                customerInfo: payload.existCustomer,\r\n                 token: payload.token,\r\n                 isAuth: true,\r\n                errors:null,\r\n     };\r\n        default : \r\n        return state\r\n    }\r\n };\r\n export default customerReducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\influencer\\\\client\\\\src\\\\component\\\\EditInflunecerModal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { updateInfluencer } from '../action/influencerActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditInflunecerModal = _ref => {\n  _s();\n\n  let {\n    influencer\n  } = _ref;\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [firstName, setFirstName] = useState('');\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleUpdate = inflId => {\n    dispatch(updateInfluencer({\n      firstName\n    }, inflId));\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        onChange: e => setP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"country\",\n        onChange: e => setCountry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpdate(influencer._id),\n        children: \" edit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditInflunecerModal, \"1/tX+qJMdx6va/7vc1jF1o0/ORk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditInflunecerModal;\nexport default EditInflunecerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditInflunecerModal\");","map":{"version":3,"sources":["C:/Users/user/Desktop/influencer/client/src/component/EditInflunecerModal.js"],"names":["React","useState","Button","Modal","useDispatch","updateInfluencer","EditInflunecerModal","influencer","dispatch","show","setShow","firstName","setFirstName","handleClose","handleShow","handleUpdate","inflId","e","target","value","setLastName","setEmail","setP","setCountry","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,iBAA5B;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;;;AACA,MAAMC,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AAC1C,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACF,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;;AACE,QAAMY,WAAW,GAAG,MAAMH,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMI,UAAU,GAAG,MAAMJ,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAMK,YAAY,GAAIC,MAAD,IAAY;AAC/BR,IAAAA,QAAQ,CAACH,gBAAgB,CAAC;AAACM,MAAAA;AAAD,KAAD,EAAcK,MAAd,CAAjB,CAAR;AACAH,IAAAA,WAAW;AACX,GAHF;;AAIF,sBACE;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEL,IAAb;AAAmB,MAAA,MAAM,EAAEI,WAA3B;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,WAAxB;AAAoC,QAAA,QAAQ,EAAGI,CAAD,IAAKL,YAAY,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAA/D;AAAA;AAAA;AAAA;AAAA,cADF,eAEM;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,QAAQ,EAAGF,CAAD,IAAKG,WAAW,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFN,eAGM;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,QAAQ,EAAGF,CAAD,IAAKI,QAAQ,CAACJ,CAAC,CAACC,MAAF,CAASC,KAAV;AAAvD;AAAA;AAAA;AAAA;AAAA,cAHN,eAIM;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,QAAQ,EAAGF,CAAD,IAAKK,IAAI,CAACL,CAAC,CAACC,MAAF,CAASC,KAAV;AAAnD;AAAA;AAAA;AAAA;AAAA,cAJN,eAKM;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,QAAQ,EAAGF,CAAD,IAAKL,YAAY,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAA7D;AAAA;AAAA;AAAA;AAAA,cALN,eAMM;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,QAAQ,EAAGF,CAAD,IAAKM,UAAU,CAACN,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3D;AAAA;AAAA;AAAA;AAAA,cANN,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAIJ,YAAY,CAACR,UAAU,CAACiB,GAAZ,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADF;AAiBD,CA3BD;;GAAMlB,mB;UACeF,W;;;KADfE,mB;AA6BN,eAAeA,mBAAf","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport {Button, Modal} from 'react-bootstrap'\r\nimport { useDispatch} from 'react-redux';\r\nimport { updateInfluencer } from '../action/influencerActions';\r\nconst EditInflunecerModal = ({influencer}) => {\r\n    const dispatch = useDispatch();\r\n    const [show, setShow] = useState(false);\r\n  const [firstName, setFirstName] = useState('')\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleUpdate = (inflId) => { \r\n      dispatch(updateInfluencer({firstName}, inflId))\r\n      handleClose()\r\n     };\r\n  return (\r\n    <>\r\n    <Button variant=\"primary\" onClick={handleShow}>\r\n      edit\r\n    </Button>\r\n\r\n    <Modal show={show} onHide={handleClose}>\r\n      <input type=\"text\" name=\"firstName\" onChange={(e)=>setFirstName(e.target.value)} />\r\n          <input type=\"text\" name=\"lastName\" onChange={(e)=>setLastName(e.target.value)} />\r\n          <input type=\"text\" name=\"email\" onChange={(e)=>setEmail(e.target.value)} />\r\n          <input type=\"text\" name=\"phone\" onChange={(e)=>setP(e.target.value)} />\r\n          <input type=\"text\" name=\"address\" onChange={(e)=>setFirstName(e.target.value)} />\r\n          <input type=\"text\" name=\"country\" onChange={(e)=>setCountry(e.target.value)} />\r\n      <button onClick={()=>handleUpdate(influencer._id)}> edit </button>\r\n    </Modal>\r\n  </>\r\n);\r\n}\r\n\r\nexport default EditInflunecerModal"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from './types';\nimport { DELETE_USER_FAILED, GET_USER_FAILED, GET_USER_LODING, GET_USER_SUCCESS, UPDATE_USER_FAILED } from './userTypes';\nexport const login = userData => async dispatch => {\n  try {\n    const res = await axios.post('/api/user/login', userData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response && error.response.data.msg ? error.response.data.msg : error.message\n    });\n  }\n};\nexport const addNewInfluencer = influencerInfo => async dispatch => {\n  try {\n    await axios.post('/api/user/', userI);\n    dispatch(getUser());\n  } catch (error) {\n    dispatch({\n      type: ADD_INFLUENCER_FAILED,\n      payload: error\n    });\n  }\n};\nexport const deleteUser = userId => async dispatch => {\n  try {\n    await axios.delete(`/api/user/${userId}`);\n    dispatch(getUser());\n  } catch (error) {\n    dispatch({\n      type: DELETE_USER_FAILED,\n      payload: error\n    });\n  }\n};\nexport const logoutAction = () => {\n  return {\n    type: LOGOUT\n  };\n};\nexport const getUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_USER_LODING\n    });\n    const res = await axios.get('/api/user/');\n    dispatch({\n      type: GET_USER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_USER_FAILED,\n      payload: error\n    });\n  }\n};\nexport const updateUser = (userData, userId) => async dispatch => {\n  try {\n    await axios.put(`/api/user/${userId}`, userData);\n    dispatch(getUser());\n  } catch (error) {\n    dispatch({\n      type: UPDATE_USER_FAILED,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/influencer/client/src/action/userAction.js"],"names":["axios","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","DELETE_USER_FAILED","GET_USER_FAILED","GET_USER_LODING","GET_USER_SUCCESS","UPDATE_USER_FAILED","login","userData","dispatch","res","post","type","payload","data","error","response","msg","message","addNewInfluencer","influencerInfo","userI","getUser","ADD_INFLUENCER_FAILED","deleteUser","userId","delete","logoutAction","get","updateUser","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from './types';\r\nimport { DELETE_USER_FAILED,  GET_USER_FAILED, GET_USER_LODING, GET_USER_SUCCESS, UPDATE_USER_FAILED } from './userTypes';\r\n\r\n\r\n\r\n export const login = (userData) =>async (dispatch)=> {\r\n     try {\r\n      const res = await  axios.post('/api/user/login', userData);\r\n      dispatch({type : LOGIN_SUCCESS , payload: res.data})\r\n     } catch (error) {\r\n        dispatch({type : LOGIN_FAIL , \r\n            payload: error.response && error.response.data.msg\r\n            ? error.response.data.msg\r\n            : error.message,})\r\n     } \r\n };\r\n export const addNewInfluencer = (influencerInfo) =>async (dispatch)=> {\r\n    try {\r\n       \r\n   await  axios.post('/api/user/',userI);\r\n     dispatch(getUser());\r\n    \r\n   \r\n    } catch (error) {\r\n       \r\n       dispatch({type : ADD_INFLUENCER_FAILED , payload: error})\r\n    } \r\n};\r\n export const deleteUser = (userId) =>async (dispatch)=> {\r\n   \r\n    try {\r\n     await  axios.delete(`/api/user/${userId}`);\r\n     dispatch(getUser());\r\n   \r\n    } catch (error) {\r\n       \r\n       dispatch({type : DELETE_USER_FAILED , payload: error})\r\n    } \r\n};\r\n\r\n export const logoutAction = () =>{\r\n\r\nreturn{\r\n    type: LOGOUT\r\n}\r\n };\r\n export const getUser = () =>async (dispatch)=> {\r\n    try {\r\n       \r\n        dispatch({type: GET_USER_LODING})\r\n        const res = await  axios.get('/api/user/');\r\n     dispatch({type : GET_USER_SUCCESS , payload: res.data});\r\n   \r\n    } catch (error) {\r\n       \r\n       dispatch({type : GET_USER_FAILED , payload: error})\r\n    } \r\n};\r\n\r\n\r\n\r\nexport const updateUser = (userData,userId) =>async (dispatch)=> {\r\n    try {\r\n       \r\n await  axios.put(`/api/user/${userId}`,userData);\r\n     dispatch(getUser());\r\n   \r\n    } catch (error) {\r\n       \r\n       dispatch({type : UPDATE_USER_FAILED , payload: error})\r\n    } \r\n};\r\n"]},"metadata":{},"sourceType":"module"}
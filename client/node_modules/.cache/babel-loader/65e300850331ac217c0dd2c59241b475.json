{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\influencer\\\\client\\\\src\\\\pages\\\\ListInfluencer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getInfluencer } from '../action/influencerActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListInfluencer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    influencerList,\n    loading\n  } = useSelector(state => state.influencer);\n  useEffect(() => {\n    dispatch(getInfluencer());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ncer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListInfluencer, \"CDGHtlSMm3pYVPDtPKTA5qMcVEE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ListInfluencer;\nexport default ListInfluencer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListInfluencer\");","map":{"version":3,"sources":["C:/Users/user/Desktop/influencer/client/src/pages/ListInfluencer.js"],"names":["useEffect","useDispatch","useSelector","getInfluencer","ListInfluencer","dispatch","influencerList","loading","state","influencer"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,aAAT,QAA8B,6BAA9B;;;AACA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAACK,IAAAA,cAAD;AAAgBC,IAAAA;AAAhB,MAA2BL,WAAW,CAAEM,KAAD,IAASA,KAAK,CAACC,UAAhB,CAA5C;AACAT,EAAAA,SAAS,CAAC,MAAK;AACbK,IAAAA,QAAQ,CAACF,aAAa,EAAd,CAAR;AACD,GAFQ,EAEP,CAACE,QAAD,CAFO,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAVD;;GAAMD,c;UACaH,W,EACgBC,W;;;KAF7BE,c;AAYN,eAAeA,cAAf","sourcesContent":["import {useEffect} from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { getInfluencer } from '../action/influencerActions';\r\nconst ListInfluencer = () => {\r\n  const dispatch = useDispatch();\r\n  const {influencerList,loading} = useSelector((state)=>state.influencer);\r\n  useEffect(()=> {\r\n    dispatch(getInfluencer())\r\n  },[dispatch]\r\n  );\r\n  return (\r\n    <div>ncer</div>\r\n  )\r\n};\r\n\r\nexport default ListInfluencer"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\influencer\\\\client\\\\src\\\\pages\\\\Influence.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getInfluencer } from '../action/influencerActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Influence = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    influencerList\n  } = useSelector(state => state.influencer);\n  useEffect(() => {\n    dispatch(getInfluencer());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), \"hello\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Influence, \"Jhj1RH1C1M0wU/VQjXI2fC7WIww=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Influence;\nexport default Influence;\n\nvar _c;\n\n$RefreshReg$(_c, \"Influence\");","map":{"version":3,"sources":["C:/Users/user/Desktop/influencer/client/src/pages/Influence.js"],"names":["React","useEffect","useDispatch","useSelector","getInfluencer","Influence","dispatch","influencerList","state","influencer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,6BAA9B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAACK,IAAAA;AAAD,MAAmBJ,WAAW,CAAEK,KAAD,IAASA,KAAK,CAACC,UAAhB,CAApC;AACAR,EAAAA,SAAS,CAAC,MAAK;AACbK,IAAAA,QAAQ,CAACF,aAAa,EAAd,CAAR;AACD,GAFQ,EAEP,CAACE,QAAD,CAFO,CAAT;AAGF,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAXD;;GAAMD,S;UACeH,W,EACQC,W;;;KAFvBE,S;AAaN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getInfluencer } from '../action/influencerActions';\r\n\r\nconst Influence = () => {\r\n    const dispatch = useDispatch();\r\n    const {influencerList} = useSelector((state)=>state.influencer);\r\n    useEffect(()=> {\r\n      dispatch(getInfluencer())\r\n    },[dispatch]);\r\n  return (\r\n    <div>\r\n      <p></p>hello\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Influence\r\n"]},"metadata":{},"sourceType":"module"}
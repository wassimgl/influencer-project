{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\influencer\\\\client\\\\src\\\\component\\\\Message.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = _ref => {\n  _s();\n\n  let {\n    setShowModal\n  } = _ref;\n  const modalRef = useRef();\n\n  const closeModal = e => {\n    if (e.target === modalRef.current) {\n      setShowModal(false);\n    }\n  }; //render the modal JSX in the portal div.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: modalRef,\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This is a Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"zNVem5B1U/BPM1VF05fbpVyTiCs=\");\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/user/Desktop/influencer/client/src/component/Message.js"],"names":["React","useRef","Message","setShowModal","modalRef","closeModal","e","target","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;AACC,MAAMC,OAAO,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAErC,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;;AACA,QAAMI,UAAU,GAAIC,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACC,MAAF,KAAaH,QAAQ,CAACI,OAA1B,EAAmC;AACjCL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAJD,CAHqC,CAQrC;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEC,QAAhC;AAA0C,IAAA,OAAO,EAAEC,UAAnD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMF,YAAY,CAAC,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlBA;;GAAMD,O;;KAAAA,O;AAmBP,eAAeA,OAAf","sourcesContent":["import React, { useRef } from \"react\";\r\n const Message = ({ setShowModal }) => {\r\n \r\n  const modalRef = useRef();\r\n  const closeModal = (e) => {\r\n    if (e.target === modalRef.current) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n  //render the modal JSX in the portal div.\r\n  return(\r\n    <div className=\"container\" ref={modalRef} onClick={closeModal}>\r\n      <div className=\"modal\">\r\n        <h2>This is a Modal</h2>\r\n        <button onClick={() => setShowModal(false)}>X</button>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\nexport default Message"]},"metadata":{},"sourceType":"module"}
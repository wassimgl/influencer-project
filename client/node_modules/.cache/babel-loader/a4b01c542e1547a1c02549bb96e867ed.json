{"ast":null,"code":"import { REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, GET_CUSTOMER_LODING, GET_CUSTOMER_SUCCESS, GET_CUSTOMER_FAILED, DELETE_CUSTOMER_FAILED, DELETE_CUSTOMER_SUCCESS, UPDATE_CUSTOMER_FAILED, UPDATE_CUSTOMER_SUCCESS, ADD_CUSTOMER_FAILED } from \"../action/types\";\nconst initState = {\n  customerList: [],\n  token: localStorage.getItem('token') || null,\n  errors: null,\n  customerInfo: {},\n  isAuth: Boolean(localStorage.getItem('isAuth')) || false\n};\n\nconst customerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n      return { ...state,\n        errors: payload\n      };\n\n    case REGISTER_SUCCESS:\n      return { ...state,\n        customerInfo: payload.newCustomer,\n        errors: null\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      localStorage.setItem('isAuth', true); //  localStorage.setItem('customer',JSON.stringify(payload.existCustomer))\n\n      return { ...state,\n        customerInfo: payload.existCustomer,\n        token: payload.token,\n        isAuth: true,\n        errors: null\n      };\n\n    case DELETE_CUSTOMER_FAILED:\n      return { ...state,\n        errors: payload\n      };\n\n    case DELETE_CUSTOMER_SUCCESS:\n    case ADD_CUSTOMER_FAILED:\n      return { ...state,\n        errors: payload\n      };\n      return {\n        custId: payload,\n        errors: false\n      };\n\n    case UPDATE_CUSTOMER_FAILED:\n      return { ...state,\n        errors: payload\n      };\n\n    case UPDATE_CUSTOMER_SUCCESS:\n      return {\n        custId: payload,\n        errors: false\n      };\n\n    case LOGOUT:\n      localStorage.clear();\n      return { ...state,\n        token: null,\n        customerInfo: {},\n        isAuth: false\n      };\n\n    case GET_CUSTOMER_LODING:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_CUSTOMER_SUCCESS:\n      return { ...state,\n        customerList: payload,\n        loading: false,\n        errors: false\n      };\n\n    case GET_CUSTOMER_FAILED:\n      return { ...state,\n        customerList: payload,\n        loading: false,\n        errors: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default customerReducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/influencer/client/src/reducers/customerReducer.js"],"names":["REGISTER_FAIL","REGISTER_SUCCESS","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_CUSTOMER_LODING","GET_CUSTOMER_SUCCESS","GET_CUSTOMER_FAILED","DELETE_CUSTOMER_FAILED","DELETE_CUSTOMER_SUCCESS","UPDATE_CUSTOMER_FAILED","UPDATE_CUSTOMER_SUCCESS","ADD_CUSTOMER_FAILED","initState","customerList","token","localStorage","getItem","errors","customerInfo","isAuth","Boolean","customerReducer","state","type","payload","newCustomer","setItem","existCustomer","custId","clear","loading"],"mappings":"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","sourcesContent":["import { REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, GET_CUSTOMER_LODING, GET_CUSTOMER_SUCCESS, GET_CUSTOMER_FAILED, DELETE_CUSTOMER_FAILED, DELETE_CUSTOMER_SUCCESS, UPDATE_CUSTOMER_FAILED, UPDATE_CUSTOMER_SUCCESS, ADD_CUSTOMER_FAILED } from \"../action/types\";\r\n\r\nconst initState = {\r\n    customerList:[],\r\n    token:localStorage.getItem('token') || null,\r\n    errors:null,\r\n\r\n    customerInfo: {},\r\n    isAuth:Boolean(localStorage.getItem('isAuth')) || false,\r\n};\r\n\r\nconst customerReducer = (state = initState,{type,payload}) => { \r\n    switch(type){\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n            return{...state, errors : payload }\r\n            case REGISTER_SUCCESS:\r\n                return{ \r\n                    ...state,\r\n                    customerInfo: payload.newCustomer,\r\n                    errors:null,\r\n         };\r\n        \r\n         case LOGIN_SUCCESS:\r\n             localStorage.setItem('token',payload.token);\r\n             localStorage.setItem('isAuth',true);\r\n            //  localStorage.setItem('customer',JSON.stringify(payload.existCustomer))\r\n\r\n\r\n            return{ \r\n                ...state,\r\n                customerInfo: payload.existCustomer,\r\n                 token: payload.token,\r\n                 isAuth: true,\r\n                errors:null,\r\n     };\r\n     case DELETE_CUSTOMER_FAILED:\r\n        \r\n        return{...state, errors : payload }\r\n       \r\n     case DELETE_CUSTOMER_SUCCESS:\r\n        \r\n        case ADD_CUSTOMER_FAILED:\r\n        \r\n            return{...state, errors : payload }\r\n\r\n        return{  custId: payload, errors : false\r\n           \r\n };\r\n case UPDATE_CUSTOMER_FAILED:\r\n        \r\n    return{...state, errors : payload }\r\n   \r\n case UPDATE_CUSTOMER_SUCCESS:\r\n    \r\n   \r\n\r\n    return{  custId: payload, errors : false\r\n       \r\n};\r\n     case LOGOUT:\r\n         localStorage.clear()\r\n         return {\r\n             ...state, \r\n             token: null,\r\n            customerInfo: {} ,\r\n            isAuth: false \r\n         };\r\n         case GET_CUSTOMER_LODING:\r\n            return{...state, loading : true }\r\n            case GET_CUSTOMER_SUCCESS:\r\n                return{ \r\n                    ...state, customerList: payload, loading: false, errors: false}\r\n                    \r\n            case GET_CUSTOMER_FAILED:\r\n                return{ \r\n                    ...state, customerList: payload, loading: false, errors: payload}\r\n        default : \r\n        return state;\r\n    }\r\n };\r\n export default customerReducer;"]},"metadata":{},"sourceType":"module"}
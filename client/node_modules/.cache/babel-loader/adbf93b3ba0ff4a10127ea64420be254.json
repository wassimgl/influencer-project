{"ast":null,"code":"import axios from 'axios';\nimport { DELETE_CUSTOMER_FAILED, GET_CUSTOMER_FAILED, GET_CUSTOMER_LODING, GET_CUSTOMER_SUCCESS, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, REGISTER_FAIL, REGISTER_SUCCESS, UPDATE_CUSTOMER_FAILED } from './types';\nexport const getCustomer = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_CUSTOMER_LODING\n    });\n    const res = await axios.get('/api/customer/');\n    dispatch({\n      type: GET_CUSTOMER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_CUSTOMER_FAILED,\n      payload: error\n    });\n  }\n};\nexport const register = (customerData, nav) => async dispatch => {\n  try {\n    const res = await axios.post('/api/customer/register', customerData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    nav('/login');\n  } catch (error) {\n    console.log(customerData);\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error\n    });\n  }\n};\nexport const login = customerData => async dispatch => {\n  try {\n    const res = await axios.post('/api/customer/login', customerData);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response && error.response.data.msg ? error.response.data.msg : error.message\n    });\n  }\n};\nexport const logoutAction = () => {\n  return {\n    type: LOGOUT\n  };\n};\nexport const deleteCustomer = custId => async dispatch => {\n  try {\n    await axios.delete(`/api/customer/${custId}`);\n    dispatch(getCustomer());\n  } catch (error) {\n    dispatch({\n      type: DELETE_CUSTOMER_FAILED,\n      payload: error\n    });\n  }\n};\nexport const update = (customerData, custId) => async dispatch => {\n  try {\n    await axios.put(`/api/customer/${custId}`, customerData);\n    dispatch(getCustomer());\n  } catch (error) {\n    dispatch({\n      type: UPDATE_CUSTOMER_FAILED,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/influencer/client/src/action/customerAction.js"],"names":["axios","DELETE_CUSTOMER_FAILED","GET_CUSTOMER_FAILED","GET_CUSTOMER_LODING","GET_CUSTOMER_SUCCESS","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","REGISTER_FAIL","REGISTER_SUCCESS","UPDATE_CUSTOMER_FAILED","getCustomer","dispatch","type","res","get","payload","data","error","register","customerData","nav","post","console","log","login","response","msg","message","logoutAction","deleteCustomer","custId","delete","update","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { DELETE_CUSTOMER_FAILED, GET_CUSTOMER_FAILED, GET_CUSTOMER_LODING, GET_CUSTOMER_SUCCESS, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, REGISTER_FAIL, REGISTER_SUCCESS, UPDATE_CUSTOMER_FAILED } from './types';\r\n\r\n\r\n\r\nexport const getCustomer = () =>async (dispatch)=> {\r\n    try {\r\n        dispatch({type: GET_CUSTOMER_LODING})\r\n     const res = await  axios.get('/api/customer/');\r\n     dispatch({type : GET_CUSTOMER_SUCCESS , payload: res.data});\r\n   \r\n    } catch (error) {\r\n       \r\n       dispatch({type : GET_CUSTOMER_FAILED , payload: error})\r\n    } \r\n};\r\n\r\nexport const register = (customerData, nav) =>async (dispatch)=> {\r\n     try {\r\n      const res = await  axios.post('/api/customer/register', customerData);\r\n      dispatch({type : REGISTER_SUCCESS , payload: res.data});\r\n      nav('/login');\r\n     } catch (error) {\r\n        console.log(customerData);\r\n        dispatch({type : REGISTER_FAIL , payload: error})\r\n     } \r\n };\r\n\r\n\r\n export const login = (customerData) =>async (dispatch)=> {\r\n     try {\r\n      const res = await  axios.post('/api/customer/login', customerData);\r\n      dispatch({type : LOGIN_SUCCESS , payload: res.data})\r\n     } catch (error) {\r\n        dispatch({type : LOGIN_FAIL , \r\n            payload: error.response && error.response.data.msg\r\n            ? error.response.data.msg\r\n            : error.message,})\r\n     } \r\n };\r\n \r\n\r\n export const logoutAction = () =>{\r\n\r\nreturn{\r\n    type: LOGOUT\r\n}\r\n }\r\n\r\n\r\n\r\n\r\n export const deleteCustomer = (custId) =>async (dispatch)=> {\r\n    try {\r\n       await  axios.delete(`/api/customer/${custId}`);\r\n\r\n     dispatch(getCustomer());\r\n   \r\n    } catch (error) {\r\n       \r\n       dispatch({type : DELETE_CUSTOMER_FAILED, payload: error})\r\n    } \r\n};\r\nexport const update = (customerData,custId) =>async (dispatch)=> {\r\n   \r\n    try {\r\n       \r\n   await  axios.put(`/api/customer/${custId}`,customerData);\r\n     dispatch(getCustomer())\r\n\r\n   \r\n   \r\n    } catch (error) {\r\n       \r\n       dispatch({type : UPDATE_CUSTOMER_FAILED, payload: error})\r\n    } \r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const {\n  GET_INFLUENCER_LODING,\n  GET_INFLUENCER_FAILED,\n  GET_INFLUENCER_SUCCESS\n} = require(\"../action/influencerTypes\");\n\nconst iniState = {\n  customerList: [],\n  token: localStorage.getItem('token') || null,\n  errors: null,\n  isAuth: Boolean(localStorage.getItem('isAuth')) || false\n};\n\nconst customerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n      return { ...state,\n        errors: payload\n      };\n\n    case REGISTER_SUCCESS:\n      return { ...state,\n        customerInfo: payload.newCustomer,\n        errors: null\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      localStorage.setItem('isAuth', true);\n      return { ...state,\n        customerInfo: payload.existCustomer,\n        token: payload.token,\n        isAuth: true,\n        errors: null\n      };\n\n    case LOGOUT:\n      localStorage.clear();\n      return { ...state,\n        token: null,\n        customerInfo: {},\n        isAuth: false\n      };\n\n    case GET_INFLUENCER_LODING:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_INFLUENCER_SUCCESS:\n      return { ...state,\n        influencerList: payload,\n        loading: false,\n        errors: false\n      };\n\n    case GET_INFLUENCER_FAILED:\n      return { ...state,\n        influencerList: payload,\n        loading: false,\n        errors: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default influencerReducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/influencer/client/src/reducers/influencerReducer.js"],"names":["GET_INFLUENCER_LODING","GET_INFLUENCER_FAILED","GET_INFLUENCER_SUCCESS","require","iniState","customerList","token","localStorage","getItem","errors","isAuth","Boolean","customerReducer","state","initState","type","payload","LOGIN_FAIL","REGISTER_FAIL","REGISTER_SUCCESS","customerInfo","newCustomer","LOGIN_SUCCESS","setItem","existCustomer","LOGOUT","clear","loading","influencerList","influencerReducer"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,qBAAF;AAAyBC,EAAAA,qBAAzB;AAAgDC,EAAAA;AAAhD,IAA2EC,OAAO,CAAC,2BAAD,CAAxF;;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,YAAY,EAAC,EADA;AAEbC,EAAAA,KAAK,EAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAF1B;AAGbC,EAAAA,MAAM,EAAC,IAHM;AAIbC,EAAAA,MAAM,EAACC,OAAO,CAACJ,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CAAP,IAA2C;AAJrC,CAAjB;;AAOA,MAAMI,eAAe,GAAG,YAAsC;AAAA,MAArCC,KAAqC,uEAA7BC,SAA6B;AAAA,MAAnB;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAmB;;AAC1D,UAAOD,IAAP;AACI,SAAKE,UAAL;AACA,SAAKC,aAAL;AACI,aAAM,EAAC,GAAGL,KAAJ;AAAWJ,QAAAA,MAAM,EAAGO;AAApB,OAAN;;AACA,SAAKG,gBAAL;AACI,aAAM,EACF,GAAGN,KADD;AAEFO,QAAAA,YAAY,EAAEJ,OAAO,CAACK,WAFpB;AAGFZ,QAAAA,MAAM,EAAC;AAHL,OAAN;;AAKP,SAAKa,aAAL;AACIf,MAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA6BP,OAAO,CAACV,KAArC;AACAC,MAAAA,YAAY,CAACgB,OAAb,CAAqB,QAArB,EAA8B,IAA9B;AAED,aAAM,EACF,GAAGV,KADD;AAEFO,QAAAA,YAAY,EAAEJ,OAAO,CAACQ,aAFpB;AAGDlB,QAAAA,KAAK,EAAEU,OAAO,CAACV,KAHd;AAIDI,QAAAA,MAAM,EAAE,IAJP;AAKFD,QAAAA,MAAM,EAAC;AALL,OAAN;;AAOP,SAAKgB,MAAL;AACIlB,MAAAA,YAAY,CAACmB,KAAb;AACA,aAAO,EACH,GAAGb,KADA;AAEHP,QAAAA,KAAK,EAAE,IAFJ;AAGJc,QAAAA,YAAY,EAAE,EAHV;AAIJV,QAAAA,MAAM,EAAE;AAJJ,OAAP;;AAOD,SAAKV,qBAAL;AACI,aAAM,EAAC,GAAGa,KAAJ;AAAWc,QAAAA,OAAO,EAAG;AAArB,OAAN;;AACA,SAAKzB,sBAAL;AACI,aAAM,EACF,GAAGW,KADD;AACQe,QAAAA,cAAc,EAAEZ,OADxB;AACiCW,QAAAA,OAAO,EAAE,KAD1C;AACiDlB,QAAAA,MAAM,EAAE;AADzD,OAAN;;AAGJ,SAAKR,qBAAL;AACI,aAAM,EACF,GAAGY,KADD;AACQe,QAAAA,cAAc,EAAEZ,OADxB;AACiCW,QAAAA,OAAO,EAAE,KAD1C;AACiDlB,QAAAA,MAAM,EAAEO;AADzD,OAAN;;AAEZ;AACI,aAAOH,KAAP;AAxCJ;AA0CF,CA3CF;;AA4CC,eAAegB,iBAAf","sourcesContent":["const { GET_INFLUENCER_LODING, GET_INFLUENCER_FAILED, GET_INFLUENCER_SUCCESS } = require(\"../action/influencerTypes\");\r\n\r\nconst iniState = {\r\n    customerList:[],\r\n    token:localStorage.getItem('token') || null,\r\n    errors:null,\r\n    isAuth:Boolean(localStorage.getItem('isAuth')) || false,\r\n};\r\n\r\nconst customerReducer = (state = initState,{type,payload}) => { \r\n    switch(type){\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n            return{...state, errors : payload }\r\n            case REGISTER_SUCCESS:\r\n                return{ \r\n                    ...state,\r\n                    customerInfo: payload.newCustomer,\r\n                    errors:null,\r\n         };\r\n         case LOGIN_SUCCESS:\r\n             localStorage.setItem('token',payload.token);\r\n             localStorage.setItem('isAuth',true);\r\n\r\n            return{ \r\n                ...state,\r\n                customerInfo: payload.existCustomer,\r\n                 token: payload.token,\r\n                 isAuth: true,\r\n                errors:null,\r\n     };\r\n     case LOGOUT:\r\n         localStorage.clear()\r\n         return {\r\n             ...state, \r\n             token: null,\r\n            customerInfo: {} ,\r\n            isAuth: false \r\n         };\r\n        \r\n        case GET_INFLUENCER_LODING:\r\n            return{...state, loading : true }\r\n            case GET_INFLUENCER_SUCCESS:\r\n                return{ \r\n                    ...state, influencerList: payload, loading: false, errors: false}\r\n                    \r\n            case GET_INFLUENCER_FAILED:\r\n                return{ \r\n                    ...state, influencerList: payload, loading: false, errors: payload}\r\n    default:\r\n        return state;\r\n                }\r\n };\r\n export default influencerReducer;"]},"metadata":{},"sourceType":"module"}